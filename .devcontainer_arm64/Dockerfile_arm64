ARG DOCKER_REPO
ARG ROS_DISTRO
ARG IMAGE_SUFFIX
FROM $DOCKER_REPO:$ROS_DISTRO$IMAGE_SUFFIX
ARG USERNAME
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Install additonal packages - add any that you need
RUN apt-get update && apt-get upgrade -y 

RUN apt-get install -y \
    python3-pip \
    python-is-python3 \
    ssh \
    neovim \
    git \
    nano \
    build-essential \
    cmake \
    unzip \
    wget \
    curl \
    virtualenvwrapper \
    ros-$ROS_DISTRO-ackermann-msgs \
    ros-$ROS_DISTRO-urg-node \
    ros-$ROS_DISTRO-joy \
    ros-$ROS_DISTRO-teleop-tools \
    ros-$ROS_DISTRO-serial-driver \
    ros-$ROS_DISTRO-joint-state-publisher \
    ros-$ROS_DISTRO-nav2-lifecycle-manager \
    ros-$ROS_DISTRO-nav2-map-server \
    ros-$ROS_DISTRO-nav2-amcl \
    ros-$ROS_DISTRO-robot-localization \
    ros-$ROS_DISTRO-tf-transformations \
    ros-$ROS_DISTRO-asio-cmake-module \
    ros-$ROS_DISTRO-odom-to-tf-ros2 \
    ros-$ROS_DISTRO-joy-linux
    
RUN pip install --no-cache-dir --upgrade \
    pip

RUN pip install --no-cache-dir --ignore-installed \
    numpy \
    pandas \
    "transforms3d==0.4.2" \
    opencv-python

    # Install dependencies for Intel RealSense
RUN apt-get update && apt-get install -y \
    librealsense2-dkms \
    librealsense2-utils \
    librealsense2-dev \
    librealsense2-dbg

# Clone the RealSense ROS2 wrapper package
RUN git clone https://github.com/IntelRealSense/realsense-ros.git src/realsense2_camera --branch ros2

# Install ROS2 dependencies
RUN apt-get update && rosdep install --from-paths src --ignore-src -r -y

# Set the default user
USER $USERNAME
ENV SHELL=/bin/bash
SHELL ["/bin/bash", "-c"] 


# # MPC
# RUN cd ~ && \
#     git clone --recursive https://github.com/acados/acados.git

# RUN source /usr/share/virtualenvwrapper/virtualenvwrapper.sh && \
#     mkvirtualenv mpc_env && \
#     workon mpc_env && \
#     pip install PyYAML && \
#     pip install trajectory_planning_helpers && \
#     pip install --upgrade quadprog && \
#     cd ~/acados && \
#     mkdir -p build && \
#     cd build && \
#     cmake -DACADOS_WITH_QPOASES=ON -DBLASFEO_TARGET=GENERIC .. && \
#     # cmake -DACADOS_WITH_QPOASES=ON -DBLASFEO_TARGET=ARMV8A_ARM_CORTEX_A57 .. && \
#     # cmake -DACADOS_WITH_QPOASES=ON .. && \
#     make install -j4 && \
#     cd .. && \
#     pip install -e ./interfaces/acados_template 

# Add .local/bin to PATH
RUN echo "export PATH=/home/$USERNAME/.local/bin${PATH:+:${PATH}}" >> /home/$USERNAME/.bashrc

# Source ROS environment automatically
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> /home/$USERNAME/.bashrc
RUN echo "source /home/ss24_racing1/install/setup.bash" >> /home/$USERNAME/.bashrc
RUN echo "source /usr/share/virtualenvwrapper/virtualenvwrapper.sh" >> /home/$USERNAME/.bashrc




#RUN echo "export ACADOS_SOURCE_DIR=~/acados" >> /home/$USERNAME/.bashrc
#RUN echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/acados/lib' >> ~/.bashrc

# RUN mkdir ~/tera_renderer_build && \
#     cd ~/tera_renderer_build && \
#     wget https://github.com/acados/tera_renderer/archive/refs/tags/v0.0.35.zip && \
#     unzip v0.0.35.zip && \
#     # curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh && \
#     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
#     source $HOME/.cargo/env && \
#     cd tera_renderer-0.0.35/ && \
#     cargo build --verbose --release && \
#     cp target/release/t_renderer ~/acados/bin/t_renderer && \
#     chmod +x ~/acados/bin/t_renderer && \
#     ~/acados/bin/t_renderer '/home/alonso/acados/interfaces/acados_template/acados_template/c_templates_tera/**/*' 'main.in.c' '/home/ss24_racing1/acados_ocp.json' 'main_Spatial_Model.c'

# Set the default user
CMD ["/bin/bash"]
